{"version":3,"sources":["components/ContactList/PhonebookList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/PhonebookForm/PhonebookForm.module.css","components/Container/Contaiter.js","components/PhonebookForm/PhonebookForm.js","components/ContactList/PhonebookList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","PhonebookForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onAddContact","reset","form","onSubmit","this","label","input","type","pattern","title","required","onChange","placeholder","options","delimiter","blocks","btn","Component","PhonebookList","contacts","onDeleteContact","list","map","id","listItem","color","size","onClick","Filter","onChangeFilter","filter","App","initialContacts","addContact","data","contact","includes","alert","shortid","generate","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","deleteContact","contactId","prevState","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","formSubmitHandler","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.256af7c5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"PhonebookList_list__2YY4Z\",\"listItem\":\"PhonebookList_listItem__32iUI\",\"btn\":\"PhonebookList_btn__2WN9B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1gK8J\",\"input\":\"Filter_input__2Sn7C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__9dEmi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"PhonebookForm_form__24DUE\",\"label\":\"PhonebookForm_label__344hD\",\"input\":\"PhonebookForm_input__7fxlZ\",\"btn\":\"PhonebookForm_btn__1vFg1\"};","import s from './Container.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import s from './PhonebookForm.module.css';\nimport Cleave from 'cleave.js/react';\nimport React, { Component } from 'react';\n\nexport default class PhonebookForm extends Component {\n  state = { name: '', number: '' };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onAddContact({ ...this.state });\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label className={s.label}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onChange={this.handleChange}\n            placeholder=\"Ivan Ivanov\"\n          />\n        </label>\n\n        <label className={s.label}>\n          Number\n          <Cleave\n            options={{ delimiter: '-', blocks: [3, 2, 2] }}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={this.state.number}\n            onChange={this.handleChange}\n            className={s.input}\n            placeholder=\"111-11-11\"\n          />\n        </label>\n\n        <button type=\"submit\" className={s.btn}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport { BsXSquareFill } from 'react-icons/bs';\n\nimport PropTypes from 'prop-types';\nimport s from './PhonebookList.module.css';\n\nexport default function PhonebookList({ contacts, onDeleteContact }) {\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.listItem} key={id}>\n          {name + ':' + number}\n          <BsXSquareFill\n            color=\"red\"\n            size=\"20px\"\n            className={s.btn}\n            type=\"button\"\n            name=\"delete\"\n            onClick={() => onDeleteContact(id)}\n          >\n            delete\n          </BsXSquareFill>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nPhonebookList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nexport default function Filter({ value, onChangeFilter }) {\n  return (\n    <div className={s.filter}>\n      Find contacts by name{' '}\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={onChangeFilter}\n        placeholder=\"Enter name\"\n      />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n","import { Component } from 'react';\nimport Container from './components/Container';\nimport initialContacts from './contacts.json';\nimport PhonebookForm from './components/PhonebookForm';\nimport PhonebookList from './components/ContactList';\nimport Filter from './components/Filter';\nimport shortid from 'shortid';\n\nexport default class App extends Component {\n  state = {\n    contacts: initialContacts,\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = data => {\n    const findContactMatches = this.state.contacts\n      .map(contact => contact.name)\n      .includes(data.name);\n\n    if (findContactMatches) {\n      alert(`${data.name} is already in contacts`);\n    } else {\n      const contact = {\n        ...data,\n        id: shortid.generate(),\n      };\n\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    }\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <PhonebookForm\n          onSubmit={this.formSubmitHandler}\n          onAddContact={this.addContact}\n        />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChangeFilter={this.changeFilter} />\n        <PhonebookList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}